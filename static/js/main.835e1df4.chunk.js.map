{"version":3,"sources":["StoryReel.js","StateProvider.js","firebase.js","Widgets.js","reducer.js","App.js","serviceWorker.js","index.js"],"names":["StoryReel","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","firebase","GoogleAuthProvider","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Widgets","actionTypes","state","action","type","user","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mhBAuCeA,ICrCFC,EAAeC,0BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OAC3B,kBAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,IAC/CC,IAIQI,EAAgB,kBAAMC,qBAAWV,I,0BCUtB,IAAIW,OAAcC,mBAK1CD,gBAnBuB,CACrBE,OAAQC,0CACRC,WAAYD,uCACZE,YAAaF,8CACbG,UAAWH,uBACXI,cAAeJ,mCACfK,kBAAmBL,eACnBM,MAAON,4CACPO,cAAeP,iBAiBGH,SAGFA,cAGYA,Y,iLChBfW,ICjBFC,EACD,WAeGpB,EAZC,SAACqB,EAAOC,GACtB,OAAQA,EAAOC,MACb,KAAKH,EACH,OAAO,2BACFC,GADL,IAEEG,KAAMF,EAAOE,OAEjB,QACE,OAAOH,ICeEI,MAtBf,WAAgB,IAAD,EACgBnB,IADhB,wBACJkB,KADI,MCGKE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,CAAehC,aHVS,CAC1BuB,KAAM,MGSuCxB,QAASA,GAClD,kBAAC,EAAD,QAGJkC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.835e1df4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./StoryReel.css\";\r\nimport Story from \"./Story\";\r\nfunction StoryReel() {\r\n  return (\r\n    <div className=\"storyReel\">\r\n      <Story\r\n        image=\"https://scontent-ssn1-1.xx.fbcdn.net/v/t1.0-9/18920443_665050790370118_7788661254461825853_n.jpg?_nc_cat=111&_nc_sid=e3f864&_nc_ohc=jsMas00PUxkAX8uV9mh&_nc_ht=scontent-ssn1-1.xx&oh=9144ac06eb49d0a5d7d3dd3fefa19172&oe=5F93F4D5\"\r\n        profileSrc=\"https://scontent-ssn1-1.xx.fbcdn.net/v/t1.0-9/18920144_665050650370132_1259064317888985311_n.jpg?_nc_cat=103&_nc_sid=09cbfe&_nc_ohc=jffkXImo7sQAX85VIHw&_nc_ht=scontent-ssn1-1.xx&oh=5b6e2ecf6000a975cc5aa8097ce7d173&oe=5F9301AF\"\r\n        title=\"sangwoo\"\r\n      />\r\n\r\n      <Story\r\n        image=\"https://scontent-ssn1-1.xx.fbcdn.net/v/t1.0-9/69839177_957847907886606_183515697630937088_n.jpg?_nc_cat=102&_nc_sid=e3f864&_nc_ohc=otyYkMlbpjcAX_jCjEh&_nc_oc=AQkywz9La7Ft7uauhyuQhUmPGcHOQc_6nFHiHuXZSsD0bbXltXknFj2EYXA1g3NnQGM&_nc_ht=scontent-ssn1-1.xx&oh=b02b88b5559fbfec6445132b97e407f8&oe=5F92F4F0\"\r\n        profileSrc=\"https://scontent-ssn1-1.xx.fbcdn.net/v/t1.0-9/69242292_956454728025924_1096627793459937280_n.jpg?_nc_cat=102&_nc_sid=09cbfe&_nc_ohc=oQ1ypCZRcbcAX9dEEOR&_nc_ht=scontent-ssn1-1.xx&oh=9a6716177cecd63b3c689021e7ff0406&oe=5F95EC44\"\r\n        title=\"YEYO\"\r\n      />\r\n\r\n      <Story\r\n        image=\"https://scontent-ssn1-1.xx.fbcdn.net/v/t31.0-8/s960x960/15800352_1321824681209341_4518031135493264535_o.jpg?_nc_cat=110&_nc_sid=e3f864&_nc_ohc=5eatSaDRKWkAX8-AxNd&_nc_ht=scontent-ssn1-1.xx&tp=7&oh=f639fc3864448f4d8aed3e20fbe1d3ee&oe=5F954ABD\"\r\n        profileSrc=\"https://scontent-ssn1-1.xx.fbcdn.net/v/t1.0-9/55853789_2280099968715136_290836527947186176_o.png?_nc_cat=108&_nc_sid=09cbfe&_nc_ohc=YX766D0wYYcAX9CJYcn&_nc_ht=scontent-ssn1-1.xx&oh=2f20424c0de6d3a4d99aef6ae1fc1daa&oe=5F94675E\"\r\n        title=\"macaroni\"\r\n      />\r\n\r\n      <Story\r\n        image=\"https://scontent-ssn1-1.xx.fbcdn.net/v/t1.0-9/s960x960/72685517_104483540970914_6597457052447014912_o.png?_nc_cat=100&_nc_sid=e3f864&_nc_ohc=lygzD4UIJU0AX_37QvD&_nc_ht=scontent-ssn1-1.xx&oh=0e57f3e19f8ef5da1ca20e65a43653f1&oe=5F96C6BE\"\r\n        profileSrc=\"https://scontent-ssn1-1.xx.fbcdn.net/v/t1.0-9/13162_10154823282045006_3444856526605225910_n.jpg?_nc_cat=105&_nc_sid=09cbfe&_nc_ohc=qZKLMjvtfVwAX_itcsB&_nc_oc=AQni_BJjwC5ee2gRzHbHDnzmmcpT9Aq9zFs28xPPBZytq7wTLr0Jd8Udn-74ON3GOiI&_nc_ht=scontent-ssn1-1.xx&oh=76638f84f0c1206d0c9806e91c20cd3e&oe=5F93328C\"\r\n        title=\"Jinseong Kim\"\r\n      />\r\n\r\n      <Story\r\n        image=\"https://scontent-ssn1-1.xx.fbcdn.net/v/t1.0-0/p180x540/80731262_2476423925813408_8600068661824192512_o.jpg?_nc_cat=103&_nc_sid=e3f864&_nc_ohc=W5yL7fISWowAX-lkaOT&_nc_ht=scontent-ssn1-1.xx&tp=6&oh=14f64335484874122a921f22673a3579&oe=5F9304C7\"\r\n        profileSrc=\"https://scontent-ssn1-1.xx.fbcdn.net/v/t1.0-9/112479469_3004830479639414_1710338436672404047_n.jpg?_nc_cat=109&_nc_sid=09cbfe&_nc_ohc=kN97f58MtlIAX-fSBUW&_nc_ht=scontent-ssn1-1.xx&oh=53ed4f4d57492841e8ee9c8ed83060cc&oe=5F96D6BC\"\r\n        title=\"Seokyanr rok\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StoryReel;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_APP_MEASUREMENT_ID,\r\n};\r\n\r\n// firebase.initializeApp(firebaseConfig);\r\n// const db = firebase.firestore;\r\n// const auth = firebase.auth();\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n// export { auth, provider };\r\n// export default db;\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// firebase최상위\r\nexport const firebaseInstance = firebase;\r\n\r\n// 인증관리\r\nexport const auth = firebase.auth();\r\n\r\n// db  컨트롤\r\nexport const db = firebase.firestore();\r\n\r\n// 파일 업로드 컨트롤\r\nexport const storageService = firebase.storage();\r\n","import React from \"react\";\r\nimport \"./Widgets.css\";\r\n\r\nfunction Widgets() {\r\n  return (\r\n    <div className=\"widgets\">\r\n      <iframe\r\n        title=\"FB-Widgets\"\r\n        src=\"https://www.facebook.com/plugins/page.php?href=https%3A%2F%2Fwww.facebook.com%2FCleverProgrammerr%2F&tabs=timeline&width=340&height=1500&small_header=false&adapt_container_width=true&hide_cover=false&show_facepile=true&appId\"\r\n        width=\"340\"\r\n        height=\"100%\"\r\n        style={{ border: \"none\", overflow: \"hidden\" }}\r\n        scrolling=\"no\"\r\n        frameBorder=\"0\"\r\n        allowTransparency=\"true\"\r\n        allow=\"encrypted-media\"\r\n      ></iframe>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Widgets;\r\n","export const initialState = {\r\n  user: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n  SET_USER: \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Feed from \"./Feed\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport Widgets from \"./Widgets\";\nimport Login from \"./Login\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  const [{ user }, dispatch] = useStateValue();\n  return (\n    // BEM naming convention\n    <div className=\"App\">\n      {!user ? (\n        <Login />\n      ) : (\n        <>\n          <Header />\n\n          <div className=\"app__body\">\n            <Sidebar />\n            <Feed />\n            <Widgets />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { StateProvider } from \"./StateProvider\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}